{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Authentication APIs",
    "description": "APIs for user authentication"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": ["http"],
  "tags": [
    {
      "name": "Authentication",
      "description": "APIs for user authentication"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Logs in a user",
        "description": "Logs in a user with provided username and OTP.",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "username",
            "description": "User's username.",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "otp",
            "description": "User's OTP (One-Time Password).",
            "in": "formData",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful login",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/signup": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Registers a new user",
        "description": "Registers a new user with provided Name, email, contact no. and password. Please provide a valid email address.",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "name",
            "description": "User's Name.",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "username",
            "description": "User's username.",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "description": "User's email address.",
            "in": "formData",
            "required": true,
            "type": "string",
            "format": "email"
          },
          {
            "name": "contact",
            "description": "User's contact number.",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "description": "User's address.",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "query",
            "description": "User's query request.",
            "in": "formData",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User registered successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Username already exists"
                }
              }
            }
          }
        }
      }
    },
    "/labels": {
      "get": {
        "summary": "Get all labels",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "labels": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new label",
        "parameters": [
          {
            "name": "label",
            "in": "body",
            "description": "Label name to be created",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Label created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/candidate/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Registers a new user",
        "description": "Registers a new user with provided Name, email, contact no. and password. Please provide a valid email address.",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "candidateid",
            "required": true,
            "type": "string",
            "unique": true
          },
          {
            "name": "selectedTestType",
            "description": "Test type",
            "in": "formData",
            "required": true,
            "type": "array"
          },
          {
            "name": "fullName",
            "description": "User's full name",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "phoneNumber",
            "description": "User's contact number.",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "email",
            "description": "User's email address.",
            "in": "formData",
            "type": "string",
            "required": true,
            "format": "email"
          },
          {
            "name": "selectedLabels",
            "description": " User's Label",
            "in": "formData",
            "type": "array"
          },
          {
            "name": "testDateTime",
            "description": "Date and Time of the test",
            "in": "formData",
            "type": "Date"
          }
        ],
        "responses": {
          "200": {
            "description": "User registered successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Username already exists"
                }
              }
            }
          }
        }
      }
    },
    "/candidate/edit": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Edit candidate information",
        "description": "Edit candidate information with provided ID. Please provide the candidate's ID and the fields you want to update.",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "candidateID",
            "description": "Candidate's ID",
            "in": "formData",
            "required": true,
            "type": "number"
          },
          {
            "name": "firstName",
            "description": "Updated first name",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastName",
            "description": "Updated last name",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "description": "Updated email address",
            "in": "formData",
            "required": false,
            "type": "string",
            "format": "email"
          },
          {
            "name": "phoneNumber",
            "description": "Updated contact number",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "address",
            "description": "Updated address",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "organizationID",
            "description": "Updated organization ID",
            "in": "formData",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Candidate information updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Candidate not found"
                }
              }
            }
          }
        }
      }
    },
    
    "/user/otp": {
      "post": {
        "summary": "Send OTP via email",
        "description": "Send OTP to the provided email address",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Object containing email address",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "user@example.com"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "OTP sent successfully"
                },
                "otp": {
                  "type": "string",
                  "example": "123456"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Email is required"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Internal server error"
                }
              }
            }
          }
        }
      }
    }
  }
}
